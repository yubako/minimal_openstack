---
- include_tasks: init_database.yml
  vars:
    database_name: "{{ item }}"
    database_user: nova
    database_pass: "{{ minimal_openstack_nova_dbpass }}"
  with_items:
    - "nova_api"
    - "nova"
    - "nova_cell0"

- include_tasks: init_service.yml
  vars:
    service_name: nova
    service_type: compute
    service_user_name: nova
    service_user_pass: "{{ minimal_openstack_nova_user_password }}"
    service_description: "Openstack Compute"

- name: Create compute endpoint
  include_tasks: endpoint.yml
  vars:
    service: "compute"
    interface: "{{ item }}"
    url: "http://controller:8774/v2.1"
  with_items:
    - "public"
    - "internal"
    - "admin"


- name: setup repository
  yum:
    name: centos-release-openstack-train
    state: present

- name: upgrade all packages
  yum:
    name: '*'
    state: latest
  tags: upgrade

- name: install required packages
  yum:
    name: 
      - python-openstackclient
      - openstack-selinux
      - openstack-utils
    state: present

- name: install compute packages
  yum:
    name: 
      - openstack-nova-api 
      - openstack-nova-conductor 
      - openstack-nova-novncproxy 
      - openstack-nova-scheduler 
    state: present

- name: configure nova.conf
  ini_file:
    path: /etc/nova/nova.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { 
      section: DEFAULT,
      option: enabled_apis,
      value: "osapi_compute,metadata"
    }
    - {
      section: api_database,
      option: connection,
      value: "mysql+pymysql://nova:{{ minimal_openstack_nova_dbpass }}@controller/nova_api"
    }
    - {
      section: database,
      option: connection,
      value: "mysql+pymysql://nova:{{ minimal_openstack_nova_dbpass }}@controller/nova"
    }
    - {
      section: DEFAULT,
      option: transport_url,
      value: "rabbit://openstack:{{ minimal_openstack_rabbitmq_password }}@controller:5672/"
    }
    - {
      section: api,
      option: auth_strategy,
      value: keystone
    }
    - {
      section: keystone_authtoken,
      option: www_authenticate_uri,
      value: http://controller:5000/
    }
    - {
      section: keystone_authtoken,
      option: auth_url,
      value: http://controller:5000/
    }
    - {
      section: keystone_authtoken,
      option: memcached_servers,
      value:  controller:11211
    }
    - {
      section: keystone_authtoken,
      option: auth_type,
      value: password
    }
    - {
      section: keystone_authtoken,
      option: project_domain_name,
      value: Default
    }
    - {
      section: keystone_authtoken,
      option: user_domain_name,
      value: Default
    }
    - {
      section: keystone_authtoken,
      option: project_name,
      value: service
    }
    - {
      section: keystone_authtoken,
      option: username,
      value: nova
    }
    - {
      section: keystone_authtoken,
      option: password,
      value: "{{ minimal_openstack_nova_user_password }}"
    }
    - {
      section: DEFAULT,
      option: my_ip,
      value: "{{ minimal_openstack_compute_management_ip }}"
    }
    - {
      section: DEFAULT,
      option: use_neutron,
      value: nova.virt.firewall.NoopFirewallDriver
    }

- name: install neutron agent
  include_tasks: neutron_for_nova.yml

- name: configure nova.conf
  ini_file:
    path: /etc/nova/nova.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - {
      section: vnc,
      option: enabled,
      value: "true"
    }
    - {
      section: vnc,
      option: server_listen,
      value: "$my_ip"
    }
    - {
      section: vnc,
      option: server_proxyclient_address,
      value: "$my_ip"
    }
    - {
      section: glance,
      option: api_servers,
      value: http://controller:9292
    }
    - {
      section: oslo_concurrency,
      option: lock_path,
      value: /var/lib/nova/tmp
    }
    - {
      section: placement,
      option: region_name,
      value: RegionOne
    }
    - {
      section: placement,
      option: project_domain_name,
      value: Default
    }
    - {
      section: placement,
      option: project_name,
      value: service
    }
    - {
      section: placement,
      option: auth_type,
      value: password
    }
    - {
      section: placement,
      option: user_domain_name,
      value: Default
    }
    - {
      section: placement,
      option: auth_url,
      value: http://controller:5000/v3
    }
    - {
      section: placement,
      option: username,
      value: placement
    }
    - {
      section: placement,
      option: password,
      value: "{{ minimal_openstack_placement_user_password }}"
    }

- name: populate nova-api database
  shell: "su -s /bin/sh -c 'nova-manage api_db sync' nova"

- name: Register the cell0 database
  shell: "su -s /bin/sh -c 'nova-manage cell_v2 map_cell0' nova"

- name: Create the cell1 cell
  shell: "su -s /bin/sh -c 'nova-manage cell_v2 create_cell --name=cell1 --verbose' nova"

- name: Populate the nova database
  shell: "su -s /bin/sh -c 'nova-manage db sync' nova"

- name: service start
  service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items:
    - openstack-nova-api.service 
    - openstack-nova-scheduler.service 
    - openstack-nova-conductor.service 
    - openstack-nova-novncproxy.service
