

- name: check glance database existence
  command: "{{ sql }} -e 'use glance;'"
  failed_when: false
  register: ret

- name: create glance databases
  block:
    - command: "{{ sql }} -e 'CREATE DATABASE glance;'"
    - command: >
          {{ sql }} -e \
            "GRANT ALL PRIVILEGES ON glance.*  \
             TO 'glance'@'localhost'  \
             IDENTIFIED BY '{{ minimal_openstack_glance_dbpass }}';"

    - command: >
        {{ sql }} -e  \
          "GRANT ALL PRIVILEGES ON glance.*  \
           TO 'glance'@'%'  \
           IDENTIFIED BY '{{ minimal_openstack_glance_dbpass }}';"

  when: ret.rc != 0

- name: check glance user existence
  command: "{{ openstack }} user show glance"
  failed_when: false
  register: glance

- block:
  - name: create glance user in openstack
    command: >
      {{ openstack }} user create --domain default 
      --password {{ minimal_openstack_glance_user_password }} glance

  - name: add admin role to glance user
    command: >
      openstack role add --project service --user glance admin

  when: glance.rc != 0


- name: check glance service existence
  command: "{{ openstack }} service show glance"
  failed_when: false
  register: glance_service

- name: create glance service
  command: >
    {{ openstack }} service create
    --name glance --description "Openstack Image" image
  when: glance_service.rc != 0

- name: Create image endpoint
  include_tasks: endpoint.yml
  vars:
    service: "image"
    interface: "{{ item }}"
    url: "http://controller:9292"
  with_items:
    - "public"
    - "internal"
    - "admin"

- name: install openstack-glance
  yum: 
    name: openstack-glance
    state: present

- name: update glance configuration
  ini_file:
    path: /etc/glance/glance-api.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    # Database
    - { section: database, 
        option: connection,
        value: "mysql+pymysql://glance:{{ minimal_openstack_glance_dbpass }}@controller/glance" }
    # Keystone authtoken
    - { section: keystone_authtoken,
        option: www_authenticate_uri,
        value: http://controller:5000}
    - { section: keystone_authtoken,
        option: auth_url,
        value: http://controller:5000}
    - { section: keystone_authtoken,
        option: memcached_servers,
        value: controller:11211 }
    - { section: keystone_authtoken,
        option: auth_type,
        value: password }
    - { section: keystone_authtoken,
        option: project_domain_name,
        value: Default}
    - { section: keystone_authtoken,
        option: user_domain_name,
        value: Default}
    - { section: keystone_authtoken,
        option: project_name,
        value: service}
    - { section: keystone_authtoken,
        option: username,
        value: glance}
    - { section: keystone_authtoken,
        option: password,
        value: "{{ minimal_openstack_glance_user_password }}"}
    - { section: paste_deploy,
        option: flavor,
        value: keystone}
    # glance store
    - { section: glance_store,
        option: stores,
        value: "file,http"}
    - { section: glance_store,
        option: default_store,
        value: file}
    - { section: glance_store,
        option: filesystem_store_datadir,
        value: "/var/lib/glance/images/" }

- name: populate identity service
  shell: "su -s /bin/sh -c 'glance-manage db_sync' glance"

- name: start glance-api
  service:
    name: openstack-glance-api.service
    enabled: yes
    state: restarted


